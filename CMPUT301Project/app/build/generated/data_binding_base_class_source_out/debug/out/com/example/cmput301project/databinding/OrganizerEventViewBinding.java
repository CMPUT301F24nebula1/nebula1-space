// Generated by view binder compiler. Do not edit!
package com.example.cmput301project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301project.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerEventViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView capacityNote;

  @NonNull
  public final CheckBox checkboxGeolocation;

  @NonNull
  public final TextInputEditText endDateText;

  @NonNull
  public final TextInputLayout eventDescription;

  @NonNull
  public final ImageView eventImageview;

  @NonNull
  public final TextInputLayout eventName;

  @NonNull
  public final ConstraintLayout eventNameLayout;

  @NonNull
  public final ImageView eventQrcodeImageview;

  @NonNull
  public final ImageView icList;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final MaterialCardView listButton;

  @NonNull
  public final TextInputLayout lotteryCapacity;

  @NonNull
  public final TextInputEditText lotteryCapacityText;

  @NonNull
  public final TextInputLayout lotteryEndsDate;

  @NonNull
  public final TextInputLayout lotteryStartsDate;

  @NonNull
  public final ScrollView mainLayout;

  @NonNull
  public final TextInputLayout posterGroup;

  @NonNull
  public final ConstraintLayout posterLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputEditText qrCodeEdittext;

  @NonNull
  public final TextInputLayout qrCodeText;

  @NonNull
  public final ConstraintLayout qrLayout;

  @NonNull
  public final MaterialCardView saveEventButton;

  @NonNull
  public final TextInputEditText selectImageButton;

  @NonNull
  public final TextInputEditText startDateText;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView textList;

  private OrganizerEventViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView capacityNote, @NonNull CheckBox checkboxGeolocation,
      @NonNull TextInputEditText endDateText, @NonNull TextInputLayout eventDescription,
      @NonNull ImageView eventImageview, @NonNull TextInputLayout eventName,
      @NonNull ConstraintLayout eventNameLayout, @NonNull ImageView eventQrcodeImageview,
      @NonNull ImageView icList, @NonNull ImageView icon, @NonNull MaterialCardView listButton,
      @NonNull TextInputLayout lotteryCapacity, @NonNull TextInputEditText lotteryCapacityText,
      @NonNull TextInputLayout lotteryEndsDate, @NonNull TextInputLayout lotteryStartsDate,
      @NonNull ScrollView mainLayout, @NonNull TextInputLayout posterGroup,
      @NonNull ConstraintLayout posterLayout, @NonNull ProgressBar progressBar,
      @NonNull TextInputEditText qrCodeEdittext, @NonNull TextInputLayout qrCodeText,
      @NonNull ConstraintLayout qrLayout, @NonNull MaterialCardView saveEventButton,
      @NonNull TextInputEditText selectImageButton, @NonNull TextInputEditText startDateText,
      @NonNull TextView text, @NonNull TextView textList) {
    this.rootView = rootView;
    this.capacityNote = capacityNote;
    this.checkboxGeolocation = checkboxGeolocation;
    this.endDateText = endDateText;
    this.eventDescription = eventDescription;
    this.eventImageview = eventImageview;
    this.eventName = eventName;
    this.eventNameLayout = eventNameLayout;
    this.eventQrcodeImageview = eventQrcodeImageview;
    this.icList = icList;
    this.icon = icon;
    this.listButton = listButton;
    this.lotteryCapacity = lotteryCapacity;
    this.lotteryCapacityText = lotteryCapacityText;
    this.lotteryEndsDate = lotteryEndsDate;
    this.lotteryStartsDate = lotteryStartsDate;
    this.mainLayout = mainLayout;
    this.posterGroup = posterGroup;
    this.posterLayout = posterLayout;
    this.progressBar = progressBar;
    this.qrCodeEdittext = qrCodeEdittext;
    this.qrCodeText = qrCodeText;
    this.qrLayout = qrLayout;
    this.saveEventButton = saveEventButton;
    this.selectImageButton = selectImageButton;
    this.startDateText = startDateText;
    this.text = text;
    this.textList = textList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerEventViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerEventViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_event_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerEventViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.capacity_note;
      TextView capacityNote = ViewBindings.findChildViewById(rootView, id);
      if (capacityNote == null) {
        break missingId;
      }

      id = R.id.checkbox_geolocation;
      CheckBox checkboxGeolocation = ViewBindings.findChildViewById(rootView, id);
      if (checkboxGeolocation == null) {
        break missingId;
      }

      id = R.id.end_date_text;
      TextInputEditText endDateText = ViewBindings.findChildViewById(rootView, id);
      if (endDateText == null) {
        break missingId;
      }

      id = R.id.event_description;
      TextInputLayout eventDescription = ViewBindings.findChildViewById(rootView, id);
      if (eventDescription == null) {
        break missingId;
      }

      id = R.id.event_imageview;
      ImageView eventImageview = ViewBindings.findChildViewById(rootView, id);
      if (eventImageview == null) {
        break missingId;
      }

      id = R.id.event_name;
      TextInputLayout eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.event_name_layout;
      ConstraintLayout eventNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventNameLayout == null) {
        break missingId;
      }

      id = R.id.event_qrcode_imageview;
      ImageView eventQrcodeImageview = ViewBindings.findChildViewById(rootView, id);
      if (eventQrcodeImageview == null) {
        break missingId;
      }

      id = R.id.ic_list;
      ImageView icList = ViewBindings.findChildViewById(rootView, id);
      if (icList == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.list_button;
      MaterialCardView listButton = ViewBindings.findChildViewById(rootView, id);
      if (listButton == null) {
        break missingId;
      }

      id = R.id.lottery_capacity;
      TextInputLayout lotteryCapacity = ViewBindings.findChildViewById(rootView, id);
      if (lotteryCapacity == null) {
        break missingId;
      }

      id = R.id.lottery_capacity_text;
      TextInputEditText lotteryCapacityText = ViewBindings.findChildViewById(rootView, id);
      if (lotteryCapacityText == null) {
        break missingId;
      }

      id = R.id.lottery_ends_date;
      TextInputLayout lotteryEndsDate = ViewBindings.findChildViewById(rootView, id);
      if (lotteryEndsDate == null) {
        break missingId;
      }

      id = R.id.lottery_starts_date;
      TextInputLayout lotteryStartsDate = ViewBindings.findChildViewById(rootView, id);
      if (lotteryStartsDate == null) {
        break missingId;
      }

      id = R.id.main_layout;
      ScrollView mainLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainLayout == null) {
        break missingId;
      }

      id = R.id.poster_group;
      TextInputLayout posterGroup = ViewBindings.findChildViewById(rootView, id);
      if (posterGroup == null) {
        break missingId;
      }

      id = R.id.poster_layout;
      ConstraintLayout posterLayout = ViewBindings.findChildViewById(rootView, id);
      if (posterLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.qr_code_edittext;
      TextInputEditText qrCodeEdittext = ViewBindings.findChildViewById(rootView, id);
      if (qrCodeEdittext == null) {
        break missingId;
      }

      id = R.id.qr_code_text;
      TextInputLayout qrCodeText = ViewBindings.findChildViewById(rootView, id);
      if (qrCodeText == null) {
        break missingId;
      }

      id = R.id.qr_layout;
      ConstraintLayout qrLayout = ViewBindings.findChildViewById(rootView, id);
      if (qrLayout == null) {
        break missingId;
      }

      id = R.id.save_event_button;
      MaterialCardView saveEventButton = ViewBindings.findChildViewById(rootView, id);
      if (saveEventButton == null) {
        break missingId;
      }

      id = R.id.select_image_button;
      TextInputEditText selectImageButton = ViewBindings.findChildViewById(rootView, id);
      if (selectImageButton == null) {
        break missingId;
      }

      id = R.id.start_date_text;
      TextInputEditText startDateText = ViewBindings.findChildViewById(rootView, id);
      if (startDateText == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text_list;
      TextView textList = ViewBindings.findChildViewById(rootView, id);
      if (textList == null) {
        break missingId;
      }

      return new OrganizerEventViewBinding((ConstraintLayout) rootView, capacityNote,
          checkboxGeolocation, endDateText, eventDescription, eventImageview, eventName,
          eventNameLayout, eventQrcodeImageview, icList, icon, listButton, lotteryCapacity,
          lotteryCapacityText, lotteryEndsDate, lotteryStartsDate, mainLayout, posterGroup,
          posterLayout, progressBar, qrCodeEdittext, qrCodeText, qrLayout, saveEventButton,
          selectImageButton, startDateText, text, textList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
