// Generated by view binder compiler. Do not edit!
package com.example.cmput301project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminSingleProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button deleteImageButton;

  @NonNull
  public final Button deleteUserButton;

  @NonNull
  public final ImageView editProfileImageview;

  @NonNull
  public final EditText emailInput;

  @NonNull
  public final EditText nameInput;

  @NonNull
  public final TextView optionalLabel;

  @NonNull
  public final EditText phoneInput;

  @NonNull
  public final TextView profileTitle;

  @NonNull
  public final Button saveUserButton;

  @NonNull
  public final Toolbar toolbar;

  private AdminSingleProfileBinding(@NonNull ScrollView rootView, @NonNull Button deleteImageButton,
      @NonNull Button deleteUserButton, @NonNull ImageView editProfileImageview,
      @NonNull EditText emailInput, @NonNull EditText nameInput, @NonNull TextView optionalLabel,
      @NonNull EditText phoneInput, @NonNull TextView profileTitle, @NonNull Button saveUserButton,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.deleteImageButton = deleteImageButton;
    this.deleteUserButton = deleteUserButton;
    this.editProfileImageview = editProfileImageview;
    this.emailInput = emailInput;
    this.nameInput = nameInput;
    this.optionalLabel = optionalLabel;
    this.phoneInput = phoneInput;
    this.profileTitle = profileTitle;
    this.saveUserButton = saveUserButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminSingleProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminSingleProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_single_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminSingleProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteImageButton;
      Button deleteImageButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteImageButton == null) {
        break missingId;
      }

      id = R.id.deleteUserButton;
      Button deleteUserButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteUserButton == null) {
        break missingId;
      }

      id = R.id.edit_profile_imageview;
      ImageView editProfileImageview = ViewBindings.findChildViewById(rootView, id);
      if (editProfileImageview == null) {
        break missingId;
      }

      id = R.id.emailInput;
      EditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.nameInput;
      EditText nameInput = ViewBindings.findChildViewById(rootView, id);
      if (nameInput == null) {
        break missingId;
      }

      id = R.id.optionalLabel;
      TextView optionalLabel = ViewBindings.findChildViewById(rootView, id);
      if (optionalLabel == null) {
        break missingId;
      }

      id = R.id.phoneInput;
      EditText phoneInput = ViewBindings.findChildViewById(rootView, id);
      if (phoneInput == null) {
        break missingId;
      }

      id = R.id.profileTitle;
      TextView profileTitle = ViewBindings.findChildViewById(rootView, id);
      if (profileTitle == null) {
        break missingId;
      }

      id = R.id.saveUserButton;
      Button saveUserButton = ViewBindings.findChildViewById(rootView, id);
      if (saveUserButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new AdminSingleProfileBinding((ScrollView) rootView, deleteImageButton,
          deleteUserButton, editProfileImageview, emailInput, nameInput, optionalLabel, phoneInput,
          profileTitle, saveUserButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
