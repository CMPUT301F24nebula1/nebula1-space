// Generated by view binder compiler. Do not edit!
package com.example.cmput301project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminSingleEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button deleteEventButton;

  @NonNull
  public final Button editButton;

  @NonNull
  public final TextView eventDescriptionTextView;

  @NonNull
  public final TextView eventEndDateTextView;

  @NonNull
  public final ImageView eventImageView;

  @NonNull
  public final TextView eventNameTextView;

  @NonNull
  public final TextView eventStartDateTextView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final Button viewEntrantsButton;

  private AdminSingleEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button deleteEventButton, @NonNull Button editButton,
      @NonNull TextView eventDescriptionTextView, @NonNull TextView eventEndDateTextView,
      @NonNull ImageView eventImageView, @NonNull TextView eventNameTextView,
      @NonNull TextView eventStartDateTextView, @NonNull Toolbar toolbar,
      @NonNull Button viewEntrantsButton) {
    this.rootView = rootView;
    this.deleteEventButton = deleteEventButton;
    this.editButton = editButton;
    this.eventDescriptionTextView = eventDescriptionTextView;
    this.eventEndDateTextView = eventEndDateTextView;
    this.eventImageView = eventImageView;
    this.eventNameTextView = eventNameTextView;
    this.eventStartDateTextView = eventStartDateTextView;
    this.toolbar = toolbar;
    this.viewEntrantsButton = viewEntrantsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminSingleEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminSingleEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_single_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminSingleEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteEventButton;
      Button deleteEventButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteEventButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.eventDescriptionTextView;
      TextView eventDescriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.eventEndDateTextView;
      TextView eventEndDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventEndDateTextView == null) {
        break missingId;
      }

      id = R.id.eventImageView;
      ImageView eventImageView = ViewBindings.findChildViewById(rootView, id);
      if (eventImageView == null) {
        break missingId;
      }

      id = R.id.eventNameTextView;
      TextView eventNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventNameTextView == null) {
        break missingId;
      }

      id = R.id.eventStartDateTextView;
      TextView eventStartDateTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventStartDateTextView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.viewEntrantsButton;
      Button viewEntrantsButton = ViewBindings.findChildViewById(rootView, id);
      if (viewEntrantsButton == null) {
        break missingId;
      }

      return new AdminSingleEventBinding((ConstraintLayout) rootView, deleteEventButton, editButton,
          eventDescriptionTextView, eventEndDateTextView, eventImageView, eventNameTextView,
          eventStartDateTextView, toolbar, viewEntrantsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
